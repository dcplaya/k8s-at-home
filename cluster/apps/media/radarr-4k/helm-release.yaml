---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr-4k
  namespace: media
  labels:
    service: radarr-4k
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: radarr
      version: 11.0.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    controllerType: deployment
    image:
      repository: hotio/radarr
      tag: nightly
      pullPolicy: Always
    env:
      TZ: "America/Los_Angeles"
      PUID: "1000"
      PGID: "100"
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingressClassName: external
        kubernetes.io/ingress.class: external
        nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/oauth2/start"
        # Custom themes provided by https://github.com/gilbN/theme.park
        nginx.ingress.kubernetes.io/configuration-snippet: |
          proxy_set_header Accept-Encoding "";
          sub_filter
          '</head>'
          '<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/radarr/organizr-dark.css">
          <link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/addons/radarr/radarr-4k-logo.css">
          </head>';
          sub_filter_once on;
      hosts:
      - host: "4kmovies.media.${SECRET_DOMAIN}"
        paths:
        - path: /
          pathType: Prefix
      tls:
      - hosts:
        - "4kmovies.media.${SECRET_DOMAIN}"
      additionalIngresses:
      - enabled: true
        nameSuffix: "api"
        annotations:
          kubernetes.io/ingressClassName: external
          kubernetes.io/ingress.class: external
        hosts:
        - host: "4kmovies.media.${SECRET_DOMAIN}"
          paths:
          - path: /api
            pathType: Prefix
        tls:
        - hosts:
          - "4kmovies.media.${SECRET_DOMAIN}"
    persistence:
      config:
        enabled: true
        existingClaim: config-radarr-4k
    podAnnotations:
      backup.velero.io/backup-volumes: config
    additionalVolumeMounts:
    - name: nfs-nas-merged-media-pvc
      mountPath: "/mnt/unionfs"
    additionalVolumes:
    - name: nfs-nas-merged-media-pvc
      persistentVolumeClaim:
        claimName: nfs-nas-merged-media-pvc
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/hostname
              operator: NotIn
              values:
              - node04
    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 1501Mi
