---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
  labels:
    service: plex
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: plex
      version: 6.1.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: plexinc/pms-docker
      tag: plexpass
      # repository: ghcr.io/k8s-at-home/plex
      # tag: v1.22.0.4163-d8c4875dd
      pullPolicy: IfNotPresent
    env:
      TZ: "America/Los_Angeles"
      PUID: "1000"
      PGID: "100"
      ADVERTISE_IP: "https://plex.media.${SECRET_DOMAIN}:443"
      PLEX_CLAIM: "${SECRET_PLEX_CLAIM_TOKEN}"
    # Needed for hardware transcoding
    podSecurityContext:
      supplementalGroups:
      - 44
      - 109
      - 100
    service:
      main:
        type: LoadBalancer
        # loadBalancerIP: "${LB_PLEX_IP}"
        externalIPs:
        - "${LB_PLEX_IP}"
        externalTrafficPolicy: Local
        annotations:
          traefik.ingress.kubernetes.io/service.serversscheme: https
      webtools:
        enabled: true
        type: NodePort
        ports:
          webtools:
            enabled: true
            port: 33400
            protocol: TCP
            targetPort: 33400
        externalTrafficPolicy: Local
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          hajimari.io/enable: "true"
          hajimari.io/icon: "plex"
          # hajimari.io/url:
          # hajimari.io/appName: 
        hosts:
        - host: "plex.media.${SECRET_DOMAIN}"
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - "plex.media.${SECRET_DOMAIN}"
    persistence:
      config:
        enabled: true
        existingClaim: config-plex
      transcode:
        enabled: true
        type: emptyDir
        medium: Memory
      # nas-merged-media:
      #   enabled: true
      #   existingClaim: nfs-nas-merged-media-pvc
      #   mountPath: "/mnt/unionfs"
      #   # readOnly: true    
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDR}"
            path: /mnt/NFS/Merged-Media
        mountPath: /mnt/unionfs
        readOnly: false
    podAnnotations:
      backup.velero.io/backup-volumes: config
    addons:
      promtail:
        enabled: true
        image:
          repository: grafana/promtail
          tag: 2.4.1
        loki: http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push
        logs:
        - name: promtail/plex
          path: "/config/Library/Application Support/Plex Media Server/Logs/*.log"
        - name: promtail/plex/plugins
          path: "/config/Library/Application Support/Plex Media Server/Logs/PMS Plugin Logs/*.log"
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        securityContext:
          runAsUser: 0
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
              - node04
            - key: feature.node.kubernetes.io/custom-intel-gpu
              operator: In
              values:
              - "true"
    resources:
      requests:
        ## 1000m = 1 core
        ## Setting request high enough so this doesnt get scheduled on i3 NUCs
        cpu: 5000m
        memory: 10000Mi
        gpu.intel.com/i915: 1
      limits:
        gpu.intel.com/i915: 1
        memory: 20000Mi
