---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: esphome
  namespace: home
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: esphome
      version: 8.0.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: esphome/esphome
      tag: dev
      pullPolicy: Always
    env:
      TZ: "America/Los_Angeles"
      ESPHOME_DASHBOARD_USE_PING: true
    hostNetwork: true
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          hajimari.io/enable: "true"
          # hajimari.io/icon: "mdiTelevisionClassic"
          # hajimari.io/url: 
          # hajimari.io/appName: 
          #
          # kubernetes.io/ingress.class: "internal"
          # nginx.ingress.kubernetes.io/auth-type: basic
          # nginx.ingress.kubernetes.io/auth-secret: media/nginx-basic-auth
          # nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
          # nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/oauth2/auth"
          # nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/oauth2/start"
          # nginx.ingress.kubernetes.io/configuration-snippet: |
          # #   # Bypass auth for requests from local network
          # #   # This works, but are there some security concerns?
          # #   satisfy any;
          # #   allow 192.168.0.0/16;
          # #   allow 172.16.0.0/12;
          # #   allow 10.0.0.0/8;
          # #   deny all;
        hosts:
        - host: esphome.home.${SECRET_DOMAIN}
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - "esphome.home.${SECRET_DOMAIN}"
    persistence:
      config:
        enabled: true
        existingClaim: config-esphome
    podAnnotations:
      backup.velero.io/backup-volumes: config
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/hostname
              operator: NotIn
              values:
              - node04
    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 1500Mi
        cpu: 2000m
