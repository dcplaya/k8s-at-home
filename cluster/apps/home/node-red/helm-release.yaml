---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: node-red
  namespace: home
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: node-red
      version: 9.0.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: nodered/node-red
      tag: 2.0.5
      pullPolicy: IfNotPresent
    #dnsPolicy: ClusterFirstWithHostNet
    hostNetwork: true
    env:
      TZ: "America/Los_Angeles"
      NODE_RED_ENABLE_PROJECTS: "true"
      NODE_RED_ENABLE_SAFE_MODE: "false"
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          # kubernetes.io/ingress.class: "internal"
          # nginx.ingress.kubernetes.io/auth-type: basic
          # nginx.ingress.kubernetes.io/auth-secret: media/nginx-basic-auth
          # nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
          # # nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/oauth2/auth"
          # # nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/oauth2/start"
          # nginx.ingress.kubernetes.io/configuration-snippet: |
          # #   # Bypass auth for requests from local network
          # #   # This works, but are there some security concerns?
          # #   satisfy any;
          # #   allow 192.168.0.0/16;
          # #   allow 172.16.0.0/12;
          # #   allow 10.0.0.0/8;
          # #   deny all;
        hosts:
        - host: node-red.home.${SECRET_DOMAIN}
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - "node-red.home.${SECRET_DOMAIN}"
    persistence:
      data:
        enabled: true
        mountPath: /data
        existingClaim: config-node-red
    podAnnotations:
      backup.velero.io/backup-volumes: data
    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 1500Mi
        cpu: 2000m
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/hostname
              operator: NotIn
              values:
              - node00
              - node04
