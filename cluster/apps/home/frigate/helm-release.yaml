---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: frigate
  namespace: home
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: frigate
      version: 6.1.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: blakeblackshear/frigate
      tag: 0.9.0-amd64
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          hajimari.io/enable: "true"
          hajimari.io/icon: "cctv"
          # hajimari.io/url: 
          # hajimari.io/appName: S
        hosts:
          - host: "frigate.home.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "frigate.home.${SECRET_DOMAIN}"
    securityContext:
      privileged: true
    persistence:
      data:
        enabled: true
        existingClaim: data-frigate
        mountPath: /data
      media:
        enabled: true
        existingClaim: media-frigate
        mountPath: /media/frigate
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 2Gi
        mountPath: /dev/shm
    config: |
      mqtt:
        # Required: host name
        host: mqtt.home.${SECRET_DOMAIN}
        # Optional: port (default: shown below)
        port: 1883
        # Optional: topic prefix (default: shown below)
        # WARNING: must be unique if you are running multiple instances
        topic_prefix: frigate
        # Optional: client id (default: shown below)
        # WARNING: must be unique if you are running multiple instances
        client_id: frigate
        # Optional: user
        user: ${SECRET_FRIGATE_USERNAME}
        # Optional: frigate
        # NOTE: Environment variables that begin with 'FRIGATE_' may be referenced in {}.
        #       eg. password: '{FRIGATE_MQTT_PASSWORD}'
        password: ${SECRET_FRIGATE_PASSWORD}
        # Optional: interval in seconds for publishing stats (default: shown below)
        stats_interval: 60
      detectors:
        coral:
          type: edgetpu
          device: usb
      ffmpeg:
        hwaccel_args:
          - -hwaccel
          - qsv
          - -qsv_device
          - /dev/dri/renderD128
      cameras:
        living-room:
          ffmpeg:
            inputs:
              - path: rtsp://10.10.200.220:7447/azUhHEqKsTILYSdR
                roles:
                  - detect
                  - rtmp
          # width: 640
          # height: 360
          # fps: 5
        dining-room:
          ffmpeg:
            inputs:
              - path: rtsp://10.10.200.220:7447/KOF0Fng0FwIRT2ug
                roles:
                  - detect
                  - rtmp
          # width: 640
          # height: 360
          # fps: 5
          zones:
            zone-kitchen:
              coordinates: 991,414,1920,289,1920,702,1708,924,1564,1080,1120,1080,1061,1039
        front-door:
          ffmpeg:
            inputs:
              - path: rtsp://10.10.200.220:7447/1xYtZJaXQrqnIctQ
                roles:
                  - detect
                  - rtmp
          # width: 640
          # height: 360
          # fps: 5
        back-door:
          ffmpeg:
            inputs:
              - path: rtsp://10.10.200.220:7447/ZjAMogmEORupfL1w
                roles:
                  - detect
                  - rtmp
          # width: 640
          # height: 360
          # fps: 5
    podAnnotations:
      configmap.reloader.stakater.com/reload: "frigate"
      backup.velero.io/backup-volumes: data
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-coral-tpu
                  operator: In
                  values:
                    - "true"
                - key: feature.node.kubernetes.io/custom-intel-gpu
                  operator: In
                  values:
                    - "true"
    resources:
      requests:
        gpu.intel.com/i915: 1
        memory: 100Mi
        cpu: 500m
      limits:
        gpu.intel.com/i915: 1
        memory: 2000Mi
